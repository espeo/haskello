
==================== FINAL INTERFACE ====================
2019-03-01 15:43:57.790222494 UTC

interface haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ:Lib [family instance module] 8063
  interface hash: f9b7e255128921cfdfdf82fca0779103
  ABI hash: cdb4573b0fdfd05264183463e619bb68
  export-list hash: 692e4d92d694c00a7e23e7c07d22c49f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 78d6cd5444fdcb049fbe3266053175c6
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  Lib.app
  Lib.startApp
module dependencies:
package dependencies: Only-0.1 QuickCheck-2.12.6.1 aeson-1.4.2.0
                      appar-0.1.7 array-0.5.3.0 async-2.2.1 attoparsec-0.13.2.2
                      attoparsec-iso8601-1.0.1.0 auto-update-0.1.4.1 base-4.12.0.0
                      base-compat-0.10.5 base64-bytestring-1.0.0.2 basement-0.0.10
                      bifunctors-5.5.3 binary-0.8.6.0 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bsb-http-chunked-0.0.0.4
                      byteorder-1.0.4 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      cassava-0.5.1.0 containers-0.6.0.1 cookie-0.4.4 cryptonite-0.25
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 directory-1.3.3.0
                      dlist-0.8.0.5 erf-2.0.0.0 exceptions-0.10.0 file-embed-0.0.11
                      filepath-1.4.2.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 hashable-1.2.7.0
                      http-api-data-0.4 http-date-0.0.8 http-media-0.7.1.3
                      http-types-0.12.2 http2-1.6.4 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 iproute-1.7.7 memory-0.14.18
                      mime-types-0.1.0.9 mmorph-1.1.2 monad-control-1.0.2.3 mtl-2.2.2
                      network-2.8.0.0 network-byte-order-0.0.0.0 network-uri-2.6.1.0
                      parsec-3.1.13.0 pretty-1.1.3.6 primitive-0.6.4.0 psqueues-0.2.7.1
                      random-1.1 resourcet-1.2.2 scientific-0.3.6.2 servant-0.15
                      servant-server-0.15 simple-sendfile-0.2.28 singleton-bool-0.1.4
                      stm-2.5.0.0 streaming-commons-0.2.1.0 string-conversions-0.4.0.1
                      tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1
                      text-short-0.1.2 tf-random-0.5 th-abstraction-0.2.10.0 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vault-0.3.1.2 vector-0.12.0.2
                      wai-3.2.2 wai-app-static-3.1.6.3 warp-3.2.26 word8-0.1.3 zlib-0.6.2
orphans: vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.5.0.0:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic
         network-2.8.0.0:Network.Socket text-1.2.3.1:Data.Text.Lazy
         basement-0.0.10:Basement.UArray.Base basement-0.0.10:Basement.Block
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.10:Basement.Block.Base
                         basement-0.0.10:Basement.Bounded basement-0.0.10:Basement.Monad
                         basement-0.0.10:Basement.MutableBuilder
                         basement-0.0.10:Basement.Nat basement-0.0.10:Basement.NonEmpty
                         basement-0.0.10:Basement.Numerical.Subtractive
                         basement-0.0.10:Basement.PrimType basement-0.0.10:Basement.String
                         basement-0.0.10:Basement.String.Encoding.ASCII7
                         basement-0.0.10:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.10:Basement.String.Encoding.UTF16
                         basement-0.0.10:Basement.String.Encoding.UTF32
                         basement-0.0.10:Basement.Types.OffsetSize
                         basement-0.0.10:Basement.UArray.Base
                         basement-0.0.10:Basement.UTF8.Base containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.5:Data.DList
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         http-api-data-0.4:Web.Internal.FormUrlEncoded
                         iproute-1.7.7:Data.IP.Addr iproute-1.7.7:Data.IP.Range
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         servant-0.15:Servant.API.ContentTypes
                         servant-0.15:Servant.API.Generic servant-0.15:Servant.API.IsSecure
                         servant-0.15:Servant.API.Stream servant-0.15:Servant.API.Verbs
                         servant-0.15:Servant.Links
                         servant-server-0.15:Servant.Server.Internal
                         servant-server-0.15:Servant.Server.Internal.BasicAuth
                         servant-server-0.15:Servant.Server.Internal.Handler
                         servant-server-0.15:Servant.Server.Internal.RoutingApplication
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         text-short-0.1.2:Data.Text.Short.Internal
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  aeson-1.4.2.0:Data.Aeson bfba563baa214951132bfa3fc3e1a304
import  -/  aeson-1.4.2.0:Data.Aeson.TH 84bff1763c533f739e5e389e1b9d67fc
import  -/  aeson-1.4.2.0:Data.Aeson.Types.FromJSON 7156342bffec9a90a34c7ea87a68d862
import  -/  aeson-1.4.2.0:Data.Aeson.Types.Internal b05c15da21ef7bcf20d9bb66d4b270d6
import  -/  aeson-1.4.2.0:Data.Aeson.Types.ToJSON d4b5a4d5322cef2155ea56a0b9db079b
import  -/  base-4.12.0.0:Control.Monad.IO.Class e8f65a5571f64fe686cca3ac75a1aa0e
import  -/  base-4.12.0.0:Data.Either 946a3435d06773e1dbcad1ba5dc18a2c
import  -/  base-4.12.0.0:Data.Functor 22aac80fdb6c7b7f60b4aaab86afee64
import  -/  base-4.12.0.0:Data.Proxy 56eca2262498f4415ae9dcccc86794ff
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Generics 7aea30cad019e3a5fc11eb21c8019cc5
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 88c2b1c4079c52d62ed362d4eb9a5302
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy 076931d562e248a6470c34d227dbacac
import  -/  cassava-0.5.1.0:Data.Csv e1a5558966ef337f50a7e8420ddaafab
import  -/  cassava-0.5.1.0:Data.Csv.Conversion ddb747f0bae9da10b9efef95d6b032d3
import  -/  cassava-0.5.1.0:Data.Csv.Encoding 375f5baa4b85bb3cdf2c71aa7b6b4cc3
import  -/  cassava-0.5.1.0:Data.Csv.Types 7d559722b77330e0386fd672a00bb8b6
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  servant-0.15:Servant.API.Capture 2b1cf59b775b75e9102e3d17b24a38ef
import  -/  servant-0.15:Servant.API.ContentTypes 1bcdc25dd5854f63486a0ee83183474a
import  -/  servant-0.15:Servant.API.Sub a5ee80fd98e67b87969ffb101697d74d
import  -/  servant-0.15:Servant.API.Verbs ac1146436b9811c1afb37911ac8a1562
import  -/  servant-server-0.15:Servant 61991b90c4dd1ab31906bdd6a3ac088e
import  -/  servant-server-0.15:Servant.Server b792c453fb98c197b5914e143de6acb5
import  -/  servant-server-0.15:Servant.Server.Internal babb21372082bb67658b96c5e98ccf4d
import  -/  servant-server-0.15:Servant.Server.Internal.Handler d2380b00a7b6b5b5cb2303d2933c7227
import  -/  text-1.2.3.1:Data.Text 78eb69b898aafd3383227a8f8c115df8
import  -/  vector-0.12.0.2:Data.Vector 84aea7b6817ec84dbb2a82903d10ea96
import  -/  wai-3.2.2:Network.Wai bf8601c1994ba35935dd5e5631479b3c
import  -/  warp-3.2.26:Network.Wai.Handler.Warp 6d384bb85448143496ff5eae8069466a
import  -/  warp-3.2.26:Network.Wai.Handler.Warp.Run e6a6e3c5588d58e907cbd16aae5a6e66
df78c57249e01dacffbe2d3998214ff4
  $fEqRating :: GHC.Classes.Eq Lib.Rating
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Rating Lib.$fEqRating_$c== Lib.$fEqRating_$c/= -}
df78c57249e01dacffbe2d3998214ff4
  $fEqRating_$c/= :: Lib.Rating -> Lib.Rating -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Lib.Rating) (y :: Lib.Rating) ->
                 case Lib.$fEqRating_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
df78c57249e01dacffbe2d3998214ff4
  $fEqRating_$c== :: Lib.Rating -> Lib.Rating -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(SLLLLL),1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: (\ (ds :: Lib.Rating) (ds1 :: Lib.Rating) ->
                 case ds of wild { Lib.Rating a1 a2 a3 a4 a5 a6 ->
                 case ds1 of wild1 { Lib.Rating b1 b2 b3 b4 b5 b6 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case a2 of wild3 { GHC.Types.I# x ->
                      case b2 of wild4 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> case a3 of wild5 { GHC.Types.I# x1 ->
                           case b3 of wild6 { GHC.Types.I# y1 ->
                           case GHC.Prim.==# x1 y1 of lwild1 {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> case a4 of wild7 { GHC.Types.I# x2 ->
                                case b4 of wild8 { GHC.Types.I# y2 ->
                                case GHC.Prim.==# x2 y2 of lwild2 {
                                  DEFAULT -> GHC.Types.False
                                  1#
                                  -> case a5 of wild9 { GHC.Types.I# x3 ->
                                     case b5 of wild10 { GHC.Types.I# y3 ->
                                     case GHC.Prim.==# x3 y3 of lwild3 {
                                       DEFAULT -> GHC.Types.False
                                       1#
                                       -> GHC.Classes.eqInt a6 b6 } } } } } } } } } } } } } } }) -}
df78c57249e01dacffbe2d3998214ff4
  $fFromJSONRating :: Data.Aeson.Types.FromJSON.FromJSON Lib.Rating
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Rating
                  Lib.$fFromJSONRating_$cparseJSON
                  Lib.$fFromJSONRating_$cparseJSONList -}
7d9d133439afd230152ba138de98d3d7
  $fFromJSONRating1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
21ab28633796d5037e2a6167a0781509
  $fFromJSONRating2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
4392cf90fbfa5bda0fec19657e4bc7af
  $fFromJSONRating3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
df78c57249e01dacffbe2d3998214ff4
  $fFromJSONRating_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.Rating
  {- Arity: 1, Strictness: <S,1*U> -}
df78c57249e01dacffbe2d3998214ff4
  $fFromJSONRating_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Lib.Rating]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Lib.$fFromJSONRating3
                            (GHC.CString.unpackAppendCString#
                               Lib.$fFromJSONRating2
                               (GHC.CString.unpackAppendCString#
                                  Lib.$fFromJSONRating1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [Lib.Rating] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[Lib.Rating]>_R))
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo1 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Lib.$fFromJSONRating_go 0# ($wgo1 0#) } }) -}
df78c57249e01dacffbe2d3998214ff4
  $fFromJSONRating_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Lib.Rating]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
df78c57249e01dacffbe2d3998214ff4
  $fFromRecordRating :: Data.Csv.Conversion.FromRecord Lib.Rating
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fFromRecordRating_$cparseRecord
                  `cast`
                (Sym (Data.Csv.Conversion.N:FromRecord[0] <Lib.Rating>_N)) -}
2b7b4c2468e35e6651ea3f7dda1c610a
  $fFromRecordRating1 ::
    Data.Vector.Vector Data.Csv.Types.Field
    -> Data.Csv.Conversion.Parser
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
            ((GHC.Generics.S1
                ('GHC.Generics.MetaSel
                   ('GHC.Maybe.Just "player")
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.Rec0 GHC.Base.String)
              GHC.Generics.:*: (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "ranking")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "matches")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 GHC.Types.Int)))
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "winStreak")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Int)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "highestRating")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Maybe.Just "victories")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.Rec0
                                                                       GHC.Types.Int))))
            p)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ @ p (x :: Data.Vector.Vector Data.Csv.Types.Field) ->
                 let {
                   m :: Data.Csv.Conversion.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "player")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "ranking")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Maybe.Just "matches")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.Rec0
                                                                      GHC.Types.Int)))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "winStreak")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "highestRating")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Maybe.Just "victories")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.Rec0
                                                                      GHC.Types.Int)))
                             p)
                   = case Lib.$fFromRecordRating_ds @ p of wild1 { (,) n4 f2 -> f2 x }
                 } in
                 (\ @ f2 :: * -> *
                    @ r1
                    (kf :: Data.Csv.Conversion.Failure f2 r1)
                    (ks :: Data.Csv.Conversion.Success
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "player")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "ranking")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "matches")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "winStreak")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "highestRating")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Maybe.Just
                                                                                              "victories")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           GHC.Types.Int))))
                                p)
                             f2
                             r1) ->
                  m `cast`
                  (Data.Csv.Conversion.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "player")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: (GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "ranking")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "matches")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Int)))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "winStreak")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                           GHC.Generics.:*: (GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "highestRating")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "victories")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Int)))
                          p>_R)
                    @ f2
                    @ r1
                    kf
                    (\ (a :: (GHC.Generics.:*:)
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "player")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "ranking")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Maybe.Just "matches")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Types.Int)))
                               (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "winStreak")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "highestRating")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Maybe.Just
                                                                           "victories")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Types.Int)))
                               p) ->
                     ks
                       a `cast`
                       (Sym (GHC.Generics.N:M1[0]
                                 <*>_N
                                 <GHC.Generics.C>_P
                                 <'GHC.Generics.MetaCons
                                    "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                 <(GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "player")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "ranking")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Maybe.Just
                                                                              "matches")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Types.Int)))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "winStreak")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Maybe.Just
                                                                              "highestRating")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Types.Int)
                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                         ('GHC.Generics.MetaSel
                                                                                            ('GHC.Maybe.Just
                                                                                               "victories")
                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                            'GHC.Generics.DecidedLazy)
                                                                                         (GHC.Generics.Rec0
                                                                                            GHC.Types.Int)))>_R) <p>_N)))
                   `cast`
                 (Sym (Data.Csv.Conversion.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                              ((GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "player")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                GHC.Generics.:*: (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "ranking")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Maybe.Just "matches")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Types.Int)))
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "winStreak")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                                 GHC.Generics.:*: (GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Maybe.Just
                                                                           "highestRating")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Types.Int)
                                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                                      ('GHC.Generics.MetaSel
                                                                                         ('GHC.Maybe.Just
                                                                                            "victories")
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                         'GHC.Generics.DecidedLazy)
                                                                                      (GHC.Generics.Rec0
                                                                                         GHC.Types.Int))))
                              p>_R))) -}
e5632af6d133fc70f630af90b2a6c7b6
  $fFromRecordRating2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Data.Text.Encoding.Error.UnicodeException
            Data.Text.Internal.Text #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ Data.Text.Encoding.Error.UnicodeException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        Data.Text.Encoding.Error.$fExceptionUnicodeException8 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ (Data.Either.Either
                             Data.Text.Encoding.Error.UnicodeException Data.Text.Internal.Text)
                        wild
                        eta1
                   GHC.Types.True
                   -> (# eta1,
                         Data.Either.Left
                           @ Data.Text.Encoding.Error.UnicodeException
                           @ Data.Text.Internal.Text
                           e3
                             `cast`
                           (UnsafeCo representational e2 Data.Text.Encoding.Error.UnicodeException) #) } }) -}
df78c57249e01dacffbe2d3998214ff4
  $fFromRecordRating_$cparseRecord ::
    Data.Csv.Types.Record -> Data.Csv.Conversion.Parser Lib.Rating
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (r :: Data.Csv.Types.Record) ->
                 let {
                   m :: Data.Csv.Conversion.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Rating"
                                "Lib"
                                "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "player")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "ranking")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "matches")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "winStreak")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "highestRating")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Maybe.Just
                                                                                              "victories")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           GHC.Types.Int)))))
                             GHC.Types.Any)
                   = case r of ww { Data.Vector.Vector ww1 ww2 ww3 ->
                     case Lib.$fFromRecordRating_ds
                            @ GHC.Types.Any of wild { (,) n3 f2 ->
                     case n3 of dt { GHC.Types.I# dt1 ->
                     case Data.IntMap.Internal.$wlookup
                            @ (Data.Csv.Types.Record
                               -> Data.Csv.Conversion.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "player")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String)
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "ranking")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "matches")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Int)))
                                        GHC.Generics.:*: (GHC.Generics.S1
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "winStreak")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                                          GHC.Generics.:*: (GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "highestRating")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Int)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Maybe.Just
                                                                                                     "victories")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Types.Int))))
                                       GHC.Types.Any))
                            ww2
                            (Data.IntMap.Internal.Tip
                               @ (Data.Vector.Vector Data.Csv.Types.Field
                                  -> Data.Csv.Conversion.Parser
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          ((GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "player")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "ranking")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "matches")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Int)))
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Maybe.Just "winStreak")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Types.Int)
                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "highestRating")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Int)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Maybe.Just
                                                                                                        "victories")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Types.Int))))
                                          GHC.Types.Any))
                               dt1
                               (Lib.$fFromRecordRating1 @ GHC.Types.Any)) of wild1 {
                       GHC.Maybe.Nothing
                       -> Data.Csv.Conversion.lengthMismatch
                            @ (GHC.Generics.M1
                                 GHC.Generics.D
                                 ('GHC.Generics.MetaData
                                    "Rating"
                                    "Lib"
                                    "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                    'GHC.Types.False)
                                 (GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                    ((GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "player")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "ranking")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Types.Int)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "matches")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              GHC.Types.Int)))
                                     GHC.Generics.:*: (GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "winStreak")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                                       GHC.Generics.:*: (GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "highestRating")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              GHC.Types.Int)
                                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                                            ('GHC.Generics.MetaSel
                                                                                               ('GHC.Maybe.Just
                                                                                                  "victories")
                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                               'GHC.Generics.DecidedLazy)
                                                                                            (GHC.Generics.Rec0
                                                                                               GHC.Types.Int)))))
                                 GHC.Types.Any)
                            (GHC.Types.I# ww2)
                            ww
                       GHC.Maybe.Just p1
                       -> let {
                            m1 :: Data.Csv.Conversion.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "player")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String)
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "ranking")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "matches")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Int)))
                                        GHC.Generics.:*: (GHC.Generics.S1
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "winStreak")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                                          GHC.Generics.:*: (GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "highestRating")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Types.Int)
                                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Maybe.Just
                                                                                                     "victories")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  GHC.Types.Int))))
                                       GHC.Types.Any)
                            = p1 ww
                          } in
                          (\ @ f3 :: * -> *
                             @ r1
                             (kf :: Data.Csv.Conversion.Failure f3 r1)
                             (ks :: Data.Csv.Conversion.Success
                                      (GHC.Generics.M1
                                         GHC.Generics.D
                                         ('GHC.Generics.MetaData
                                            "Rating"
                                            "Lib"
                                            "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                            'GHC.Types.False)
                                         (GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                            ((GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "player")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0 GHC.Base.String)
                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Maybe.Just "ranking")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Maybe.Just
                                                                                         "matches")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.Rec0
                                                                                      GHC.Types.Int)))
                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "winStreak")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0 GHC.Types.Int)
                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Maybe.Just
                                                                                         "highestRating")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.Rec0
                                                                                      GHC.Types.Int)
                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                    ('GHC.Generics.MetaSel
                                                                                                       ('GHC.Maybe.Just
                                                                                                          "victories")
                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                    (GHC.Generics.Rec0
                                                                                                       GHC.Types.Int)))))
                                         GHC.Types.Any)
                                      f3
                                      r1)[OneShot] ->
                           m1
                             `cast`
                           (Data.Csv.Conversion.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Maybe.Just "player")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                     GHC.Generics.:*: (GHC.Generics.S1
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "ranking")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                          ('GHC.Generics.MetaSel
                                                                             ('GHC.Maybe.Just
                                                                                "matches")
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.Rec0
                                                                             GHC.Types.Int)))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Maybe.Just "winStreak")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                                      GHC.Generics.:*: (GHC.Generics.S1
                                                                          ('GHC.Generics.MetaSel
                                                                             ('GHC.Maybe.Just
                                                                                "highestRating")
                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                             'GHC.Generics.NoSourceStrictness
                                                                             'GHC.Generics.DecidedLazy)
                                                                          (GHC.Generics.Rec0
                                                                             GHC.Types.Int)
                                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                                           ('GHC.Generics.MetaSel
                                                                                              ('GHC.Maybe.Just
                                                                                                 "victories")
                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                              'GHC.Generics.DecidedLazy)
                                                                                           (GHC.Generics.Rec0
                                                                                              GHC.Types.Int))))
                                   GHC.Types.Any>_R)
                             @ f3
                             @ r1
                             kf
                             (\ (a :: GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Maybe.Just "player")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "ranking")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Types.Int)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Maybe.Just
                                                                                     "matches")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Types.Int)))
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "winStreak")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Types.Int)
                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Maybe.Just
                                                                                     "highestRating")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Types.Int)
                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Maybe.Just
                                                                                                      "victories")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.Rec0
                                                                                                   GHC.Types.Int))))
                                        GHC.Types.Any) ->
                              ks
                                a `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.D>_P
                                          <'GHC.Generics.MetaData
                                             "Rating"
                                             "Lib"
                                             "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                             'GHC.Types.False>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                             ((GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "player")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)
                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Maybe.Just "ranking")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Maybe.Just
                                                                                          "matches")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.Rec0
                                                                                       GHC.Types.Int)))
                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Maybe.Just "winStreak")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Maybe.Just
                                                                                          "highestRating")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.Rec0
                                                                                       GHC.Types.Int)
                                                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Maybe.Just
                                                                                                           "victories")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.Rec0
                                                                                                        GHC.Types.Int))))>_R) <GHC.Types.Any>_N)))
                            `cast`
                          (Sym (Data.Csv.Conversion.N:Parser[0]
                                    <GHC.Generics.M1
                                       GHC.Generics.D
                                       ('GHC.Generics.MetaData
                                          "Rating"
                                          "Lib"
                                          "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                          'GHC.Types.False)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          ((GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "player")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "ranking")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Types.Int)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "matches")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Int)))
                                           GHC.Generics.:*: (GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Maybe.Just "winStreak")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Types.Int)
                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "highestRating")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Int)
                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Maybe.Just
                                                                                                        "victories")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.Rec0
                                                                                                     GHC.Types.Int)))))
                                       GHC.Types.Any>_R)) } } } }
                 } in
                 (\ @ f2 :: * -> *
                    @ r1
                    (kf :: Data.Csv.Conversion.Failure f2 r1)
                    (ks :: Data.Csv.Conversion.Success Lib.Rating f2 r1) ->
                  m `cast`
                  (Nth:3
                       (Nth:3
                            (<Data.Csv.Conversion.Options>_R
                             ->_R <Data.Vector.Vector Data.ByteString.Internal.ByteString>_R
                             ->_R (Data.Csv.Conversion.Parser
                                     (Sub (Sym (Lib.Rep_Rating[0])) <GHC.Types.Any>_N))_R)) ; Data.Csv.Conversion.N:Parser[0]
                                                                                                  <GHC.Generics.Rep
                                                                                                     Lib.Rating
                                                                                                     GHC.Types.Any>_R)
                    @ f2
                    @ r1
                    kf
                    (\ (a1 :: GHC.Generics.Rep Lib.Rating GHC.Types.Any) ->
                     ks (Lib.$fFromRecordRating_$cto @ GHC.Types.Any a1)))
                   `cast`
                 (Sym (Data.Csv.Conversion.N:Parser[0] <Lib.Rating>_R))) -}
df78c57249e01dacffbe2d3998214ff4
  $fFromRecordRating_$cto ::
    GHC.Generics.Rep Lib.Rating x -> Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LS)S(LS)),1*U(1*U(U,1*U(U,U)),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Lib.Rating x) ->
                 case ds
                        `cast`
                      ((Sub (Lib.Rep_Rating[0]) ; (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.D>_P
                                                       <'GHC.Generics.MetaData
                                                          "Rating"
                                                          "Lib"
                                                          "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                                          'GHC.Types.False>_P
                                                       <GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "Rating"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.True)
                                                          ((GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "player")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R GHC.Base.String)
                                                            GHC.Generics.:*: (GHC.Generics.M1
                                                                                GHC.Generics.S
                                                                                ('GHC.Generics.MetaSel
                                                                                   ('GHC.Maybe.Just
                                                                                      "ranking")
                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                   'GHC.Generics.DecidedLazy)
                                                                                (GHC.Generics.K1
                                                                                   GHC.Generics.R
                                                                                   GHC.Types.Int)
                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Maybe.Just
                                                                                                       "matches")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Types.Int)))
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Maybe.Just
                                                                                     "winStreak")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Int)
                                                                             GHC.Generics.:*: (GHC.Generics.M1
                                                                                                 GHC.Generics.S
                                                                                                 ('GHC.Generics.MetaSel
                                                                                                    ('GHC.Maybe.Just
                                                                                                       "highestRating")
                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                 (GHC.Generics.K1
                                                                                                    GHC.Generics.R
                                                                                                    GHC.Types.Int)
                                                                                               GHC.Generics.:*: GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Maybe.Just
                                                                                                                        "victories")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.K1
                                                                                                                     GHC.Generics.R
                                                                                                                     GHC.Types.Int))))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                <*>_N
                                                                                                                                                <GHC.Generics.C>_P
                                                                                                                                                <'GHC.Generics.MetaCons
                                                                                                                                                   "Rating"
                                                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                                                   'GHC.Types.True>_P
                                                                                                                                                <(GHC.Generics.M1
                                                                                                                                                    GHC.Generics.S
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "player")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                       GHC.Generics.R
                                                                                                                                                       GHC.Base.String)
                                                                                                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.S
                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                         ('GHC.Maybe.Just
                                                                                                                                                                            "ranking")
                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                                         GHC.Generics.R
                                                                                                                                                                         GHC.Types.Int)
                                                                                                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                          ('GHC.Maybe.Just
                                                                                                                                                                                             "matches")
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                          GHC.Types.Int)))
                                                                                                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                     GHC.Generics.S
                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                                           "winStreak")
                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                                        GHC.Generics.R
                                                                                                                                                                        GHC.Types.Int)
                                                                                                                                                                   GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                                       GHC.Generics.S
                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                          ('GHC.Maybe.Just
                                                                                                                                                                                             "highestRating")
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                       (GHC.Generics.K1
                                                                                                                                                                                          GHC.Generics.R
                                                                                                                                                                                          GHC.Types.Int)
                                                                                                                                                                                     GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                                        GHC.Generics.S
                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                           ('GHC.Maybe.Just
                                                                                                                                                                                                              "victories")
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        (GHC.Generics.K1
                                                                                                                                                                                                           GHC.Generics.R
                                                                                                                                                                                                           GHC.Types.Int)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds4 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds2 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 case ds8 of wild4 { GHC.Generics.:*: ds9 ds10 ->
                 Lib.Rating
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "player")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Base.String>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <GHC.Base.String>_R
                                                                         <x>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "ranking")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "matches")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "winStreak")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "highestRating")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds10
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "victories")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P) } } } } }) -}
83d7713d6f72e486b078f669f9b465d7
  $fFromRecordRating_ds ::
    (GHC.Types.Int,
     Data.Vector.Vector Data.Csv.Types.Field
     -> Data.Csv.Conversion.Parser
          ((GHC.Generics.:*:)
             (GHC.Generics.S1
                ('GHC.Generics.MetaSel
                   ('GHC.Maybe.Just "player")
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.Rec0 GHC.Base.String)
              GHC.Generics.:*: (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "ranking")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "matches")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 GHC.Types.Int)))
             (GHC.Generics.S1
                ('GHC.Generics.MetaSel
                   ('GHC.Maybe.Just "winStreak")
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.NoSourceStrictness
                   'GHC.Generics.DecidedLazy)
                (GHC.Generics.Rec0 GHC.Types.Int)
              GHC.Generics.:*: (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "highestRating")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "victories")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy)
                                                   (GHC.Generics.Rec0 GHC.Types.Int)))
             p1))
  {- Unfolding: (\ @ p1 ->
                 case Lib.$w$dGFromRecordProd
                        @ p1
                        Data.Csv.Conversion.$fGFromRecordSumkM1r1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
df78c57249e01dacffbe2d3998214ff4
  $fGenericRating :: GHC.Generics.Generic Lib.Rating
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Rating
                  Lib.$fGenericRating1
                    `cast`
                  (forall (x :: <*>_N).
                   <Lib.Rating>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Rating"
                                     "Lib"
                                     "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
                                     'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "player")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       GHC.Generics.:*: (GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Maybe.Just "ranking")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Types.Int)
                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Maybe.Just
                                                                                  "matches")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Types.Int)))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "winStreak")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Int)
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Maybe.Just
                                                                                  "highestRating")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Types.Int)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Maybe.Just
                                                                                                   "victories")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                GHC.Types.Int))))>_R) ; Sub (Sym (Lib.Rep_Rating[0]))) <x>_N)
                  Lib.$fFromRecordRating_$cto -}
df78c57249e01dacffbe2d3998214ff4
  $fGenericRating1 ::
    Lib.Rating
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Maybe.Just "player")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ranking")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "matches")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "winStreak")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "highestRating")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "victories")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R GHC.Types.Int))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Lib.Rating) ->
                 case x1 of wild { Lib.Rating g1 g2 g3 g4 g5 g6 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "player")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "ranking")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "matches")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "winStreak")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "highestRating")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "victories")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)))
                    @ x
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "player")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "ranking")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "matches")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ x
                       g1
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.String>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "player")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R GHC.Base.String>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ranking")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matches")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                          @ x
                          g2
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Types.Int>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "ranking")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                          g3
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Types.Int>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "matches")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R GHC.Types.Int>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "winStreak")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "highestRating")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "victories")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ x
                       g4
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Types.Int>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "winStreak")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                       (GHC.Generics.:*:
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "highestRating")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "victories")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                          @ x
                          g5
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Types.Int>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "highestRating")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                          g6
                            `cast`
                          (Sym (GHC.Generics.N:K1[0]
                                    <*>_N
                                    <GHC.Generics.R>_P
                                    <GHC.Types.Int>_R
                                    <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "victories")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R GHC.Types.Int>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "player")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "ranking")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Maybe.Just "matches")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R GHC.Types.Int)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "winStreak")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Maybe.Just
                                                                        "highestRating")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R GHC.Types.Int)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Maybe.Just
                                                                                         "victories")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      GHC.Types.Int)))>_R) <x>_N) }) -}
df78c57249e01dacffbe2d3998214ff4
  $fShowRating :: GHC.Show.Show Lib.Rating
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Rating
                  Lib.$fShowRating_$cshowsPrec
                  Lib.$fShowRating_$cshow
                  Lib.$fShowRating_$cshowList -}
df78c57249e01dacffbe2d3998214ff4
  $fShowRating1 :: Lib.Rating -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,U>,
     Unfolding: (\ (w :: Lib.Rating) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Rating ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 w1 }) -}
399ddfaf2086ee6ccc4ad5d22900d4b3
  $fShowRating2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
df78c57249e01dacffbe2d3998214ff4
  $fShowRating_$cshow :: Lib.Rating -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Rating) ->
                 Lib.$fShowRating_$cshowsPrec
                   Lib.$fShowRating2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
df78c57249e01dacffbe2d3998214ff4
  $fShowRating_$cshowList :: [Lib.Rating] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Lib.Rating]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Lib.Rating Lib.$fShowRating1 ls s) -}
df78c57249e01dacffbe2d3998214ff4
  $fShowRating_$cshowsPrec ::
    GHC.Types.Int -> Lib.Rating -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.Rating)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Rating ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 w2 } }) -}
df78c57249e01dacffbe2d3998214ff4
  $fToJSONRating :: Data.Aeson.Types.ToJSON.ToJSON Lib.Rating
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Rating
                  Lib.$fToJSONRating_$ctoJSON
                  Lib.$fToJSONRating1
                    `cast`
                  (<Lib.Rating>_R
                   ->_R (forall (r :: <*>_N).
                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal
                                          r>_R)) ; (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                   <Data.Aeson.Types.Internal.Value>_P)))
                  Lib.$fToJSONRating_$ctoJSONList
                  Lib.$fToJSONRating_$ctoEncodingList -}
df78c57249e01dacffbe2d3998214ff4
  $fToJSONRating1 ::
    Lib.Rating
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <S,1*U(U,U(U),U(U),U(U),U(U),U(U))><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Lib.Rating)
                   @ r
                   (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                   (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Lib.Rating ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { Data.ByteString.Builder.Internal.BufferRange ww8 ww9 ->
                 Lib.$w$ctoEncoding
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   @ r
                   w1
                   ww8
                   ww9
                   w3 } }) -}
1fc83e9d600bf6ad1bc3f6770bda102c
  $fToJSONRating10 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating11 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
84734214dfe485769ffedc14bca4dd30
  $fToJSONRating11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating12
                   0#
                   ipv1 }) -}
25db792ca76f65f6a43499df7e5fac27
  $fToJSONRating12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating13) -}
5e48994721392c5d9b7412f477153850
  $fToJSONRating13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("winStreak"#) -}
ead3ec5ba4248c94e723ed241853e552
  $fToJSONRating14 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating15 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c4d700fe82cb456d6a1c5b2b98c5a39c
  $fToJSONRating15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating16
                   0#
                   ipv1 }) -}
358dd8f35d00f19375eba9c0313dafef
  $fToJSONRating16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating17) -}
69c35fe44884ff75f3301644b82229f7
  $fToJSONRating17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("matches"#) -}
2750a84c5741693bad3bd91ce0dbda66
  $fToJSONRating18 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating19 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
aed0688d148160fbcc9e7392eb98545e
  $fToJSONRating19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating20
                   0#
                   ipv1 }) -}
e2114c5139fce19caa74c79a7c5dc9c9
  $fToJSONRating2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating3 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
02637f1bdc8964c7c1f5fe98e4b8d842
  $fToJSONRating20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating21) -}
6d2028df46dcb732ea5f506f8059c60d
  $fToJSONRating21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ranking"#) -}
101369af0650504dada60c939e616040
  $fToJSONRating22 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating23 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c962659afc8ecc4bf02af34063b7a72f
  $fToJSONRating23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating24
                   0#
                   ipv1 }) -}
f5ba8a38bfc38ae3a4782b951c89f562
  $fToJSONRating24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating25) -}
56519df25dd7f7fe363a16e0609684ea
  $fToJSONRating25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("player"#) -}
9890a0d24e6a1ccdfcba974e343d2a9c
  $fToJSONRating3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating4
                   0#
                   ipv1 }) -}
3b93b5a262f5cca2853fc8ffff1feb44
  $fToJSONRating4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating5) -}
d2a63f6cc28171e6535e7e5603ea68f1
  $fToJSONRating5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("victories"#) -}
5c35f49f84d61e097027b75412895823
  $fToJSONRating6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.$fToJSONRating7 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
555d6d8fdffc83cb1fe449cfa6d0610c
  $fToJSONRating7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s2 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Lib.$fToJSONRating8
                   0#
                   ipv1 }) -}
db8882a0c9b13b62bc0e9f477d027022
  $fToJSONRating8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.$fToJSONRating9) -}
08981a8bc03cfb5558ea7e320c3a0aea
  $fToJSONRating9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("highestRating"#) -}
df78c57249e01dacffbe2d3998214ff4
  $fToJSONRating_$ctoEncodingList ::
    [Lib.Rating] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Lib.Rating
                   Lib.$fToJSONRating1
                     `cast`
                   (<Lib.Rating>_R
                    ->_R (forall (r :: <*>_N).
                          <Data.ByteString.Builder.Internal.BuildStep r>_R
                          ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.ByteString.Builder.Internal.BuildSignal
                                           r>_R)) ; (Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                    <Data.Aeson.Types.Internal.Value>_P)))) -}
df78c57249e01dacffbe2d3998214ff4
  $fToJSONRating_$ctoJSON ::
    Lib.Rating -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>m1,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.Rating) ->
                 case w of ww { Lib.Rating ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Lib.$w$ctoJSON ww1 ww2 ww3 ww4 ww5 ww6 of ww7 { Unit# ww8 ->
                 Data.Aeson.Types.Internal.Object ww8 } }) -}
df78c57249e01dacffbe2d3998214ff4
  $fToJSONRating_$ctoJSONList ::
    [Lib.Rating] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Lib.Rating]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n3 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Lib.Rating
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Lib.Rating
                                     c
                                     Lib.$fToJSONRating_$ctoJSON)
                                  n3
                                  x)))))) -}
4f36225b7538dd92a85a198170f4a5d4
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [Lib.Rating]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Lib.Rating]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$callMime
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON
                     Servant.API.ContentTypes.$fAllCTRender[]()_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N)))
                    `cast`
                  (Sym (Servant.API.ContentTypes.N:AllMime[0]
                            <'[Servant.API.ContentTypes.JSON]>_N))
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [Lib.Rating]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON
                     Servant.API.ContentTypes.$fAllCTRender[]()_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0) -}
0ba2c9ec2517e77bd2f08d53e74cdf77
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [Lib.Rating]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Lib.Rating]
                  (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]) ->
                   GHC.Types.:
                     @ Network.HTTP.Media.MediaType.Internal.MediaType
                     Servant.API.ContentTypes.$fAcceptTYPEJSON4
                     Servant.API.ContentTypes.$fAcceptTYPEJSON2)
                    `cast`
                  (Sym (Servant.API.ContentTypes.N:AllMime[0]
                            <'[Servant.API.ContentTypes.JSON]>_N))
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [Lib.Rating]
                     Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa) -}
582d4d3002cef5d25af480e33fdb0765
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [Lib.Rating]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [Lib.Rating]
                  Servant.API.ContentTypes.$fAcceptTYPEJSON
                  (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                     (eta :: [Lib.Rating]) ->
                   Data.ByteString.Builder.toLazyByteString
                     (case eta of wild {
                        []
                        -> Data.Aeson.Encoding.Builder.emptyArray_1
                             `cast`
                           ((forall (r :: <*>_N).
                             <Data.ByteString.Builder.Internal.BuildStep r>_R
                             ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Data.ByteString.Builder.Internal.BuildSignal
                                              r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                        : x xs
                        -> Data.ByteString.Builder.Internal.append
                             Data.Aeson.Encoding.Internal.list1
                               `cast`
                             ((forall (r :: <*>_N).
                               <Data.ByteString.Builder.Internal.BuildStep r>_R
                               ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             <Data.ByteString.Builder.Internal.BuildSignal
                                                r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                             (Data.ByteString.Builder.Internal.append
                                (Lib.$fToJSONRating1 x)
                                  `cast`
                                ((forall (r :: <*>_N).
                                  <Data.ByteString.Builder.Internal.BuildStep r>_R
                                  ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <Data.ByteString.Builder.Internal.BuildSignal
                                                   r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                (Data.ByteString.Builder.Internal.append
                                   (GHC.Base.foldr
                                      @ Lib.Rating
                                      @ (Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value)
                                      (\ (v :: Lib.Rating)
                                         (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                  Data.Aeson.Types.Internal.Value)[OneShot] ->
                                       Data.ByteString.Builder.Internal.append
                                         Data.Aeson.Encoding.Internal.>*<1
                                           `cast`
                                         ((forall (r :: <*>_N).
                                           <Data.ByteString.Builder.Internal.BuildStep r>_R
                                           ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                           ->_R Sym (GHC.Types.N:IO[0]
                                                         <Data.ByteString.Builder.Internal.BuildSignal
                                                            r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                         (Data.ByteString.Builder.Internal.append
                                            (Lib.$fToJSONRating1 v)
                                              `cast`
                                            ((forall (r :: <*>_N).
                                              <Data.ByteString.Builder.Internal.BuildStep r>_R
                                              ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                              ->_R Sym (GHC.Types.N:IO[0]
                                                            <Data.ByteString.Builder.Internal.BuildSignal
                                                               r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                            vs
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P)))
                                        `cast`
                                      (<Lib.Rating>_R
                                       ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                               Data.Aeson.Types.Internal.Value>_R
                                       ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                     <Data.Aeson.Types.Internal.Value>_P))
                                      Data.ByteString.Builder.Internal.empty
                                        `cast`
                                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                <Data.Aeson.Types.Internal.Value>_P))
                                      xs)
                                     `cast`
                                   (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                        <Data.Aeson.Types.Internal.Value>_P)
                                   Data.Aeson.Encoding.Internal.closeBracket1
                                     `cast`
                                   ((forall (r :: <*>_N).
                                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) })) -}
c033044922426e97ddfd7a59b32aaeb5
  $s$fAllMimeRender:a0_$callMimeRender ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [Lib.Rating]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: [2],
     Unfolding: InlineRule (2, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: [Lib.Rating]) ->
                 Servant.API.ContentTypes.$w$callMimeRender1
                   @ Servant.API.ContentTypes.JSON
                   @ [Lib.Rating]
                   Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
                   w2) -}
054db59c87549864f153caefd28ac05e
  $s$fAllMimeRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [Network.HTTP.Media.MediaType.Internal.MediaType]
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]) ->
                 GHC.Types.:
                   @ Network.HTTP.Media.MediaType.Internal.MediaType
                   Servant.API.ContentTypes.$fAcceptTYPEJSON4
                   Servant.API.ContentTypes.$fAcceptTYPEJSON2) -}
7e38be1e033a6713ec4ea01513e9101a
  $s$fHasServerTYPE:>context1 :: GHC.Natural.Natural
  {- HasNoCafRefs, Unfolding: (200) -}
cf303930584ee362d0a9afe464edcb20
  $s$fHasServerTYPE:>context4_$croute1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lib.$s$fHasServerTYPE:>context4_$croute2) -}
fb9b6ce032510417a727fe2794146fe7
  $s$fHasServerTYPE:>context4_$croute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("get_ratings"#) -}
9056be6909a9c7757ed9d8c5442b5ea5
  $sencode ::
    [Lib.Rating] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [Lib.Rating]) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case eta of wild {
                      []
                      -> Data.Aeson.Encoding.Builder.emptyArray_1
                           `cast`
                         ((forall (r :: <*>_N).
                           <Data.ByteString.Builder.Internal.BuildStep r>_R
                           ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Data.ByteString.Builder.Internal.BuildSignal
                                            r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                      : x xs
                      -> Data.ByteString.Builder.Internal.append
                           Data.Aeson.Encoding.Internal.list1
                             `cast`
                           ((forall (r :: <*>_N).
                             <Data.ByteString.Builder.Internal.BuildStep r>_R
                             ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Data.ByteString.Builder.Internal.BuildSignal
                                              r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                           (Data.ByteString.Builder.Internal.append
                              (Lib.$fToJSONRating1 x)
                                `cast`
                              ((forall (r :: <*>_N).
                                <Data.ByteString.Builder.Internal.BuildStep r>_R
                                ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <Data.ByteString.Builder.Internal.BuildSignal
                                                 r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ Lib.Rating
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: Lib.Rating)
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       Data.Aeson.Encoding.Internal.>*<1
                                         `cast`
                                       ((forall (r :: <*>_N).
                                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                         ->_R Sym (GHC.Types.N:IO[0]
                                                       <Data.ByteString.Builder.Internal.BuildSignal
                                                          r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                       (Data.ByteString.Builder.Internal.append
                                          (Lib.$fToJSONRating1 v)
                                            `cast`
                                          ((forall (r :: <*>_N).
                                            <Data.ByteString.Builder.Internal.BuildStep r>_R
                                            ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          <Data.ByteString.Builder.Internal.BuildSignal
                                                             r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<Lib.Rating>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    Data.ByteString.Builder.Internal.empty
                                      `cast`
                                    (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                              <Data.Aeson.Types.Internal.Value>_P))
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 Data.Aeson.Encoding.Internal.closeBracket1
                                   `cast`
                                 ((forall (r :: <*>_N).
                                   <Data.ByteString.Builder.Internal.BuildStep r>_R
                                   ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 <Data.ByteString.Builder.Internal.BuildSignal
                                                    r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) })) -}
ce6757fd2f49bfeef52db94cf7ebde2c
  $tc'Rating :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14447834546414838483##
                   7466508724550916789##
                   Lib.$trModule
                   Lib.$tc'Rating2
                   0#
                   Lib.$tc'Rating1) -}
fca1335f6d9f7cd65d61869401128d2a
  $tc'Rating1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a46b8088758bcaffa2863ae675a48ca5
  $tc'Rating2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Rating3) -}
9c3da7e805ca0c17645d2567f6b78215
  $tc'Rating3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rating"#) -}
c3ba49728fc65345277aaa7f809eea5d
  $tcRating :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5885865082898142873##
                   6109642935614632939##
                   Lib.$trModule
                   Lib.$tcRating1
                   0#
                   GHC.Types.krep$*) -}
d03888ac0fd5caba77193093856e3db8
  $tcRating1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcRating2) -}
b9b9bdb83c22b86ba9444f62d3a3b0c3
  $tcRating2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Rating"#) -}
ed0485c2e9937419a270f3e036260db6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
38b7369c4238a5c808f61ffc46aa3bdd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
8474efd489e9ab7dbbb1ff0f57693f85
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
ac73282d7e89d386d3efacc75c8a6198
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
b91fdf117a5628c88840e93c3b02cf7f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"#) -}
047a08501262e3238492671f003a6713
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 8,
     Strictness: <S,U><L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [2] -}
e4f0d3a1ba0c2d9215de1558f77bb001
  $w$ctoEncoding ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> GHC.Prim.Addr#
       -> GHC.Prim.Addr#
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 10,
     Strictness: <L,U><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,C(C1(U(U,U)))><S,U><S,U><S,U>,
     Inline: [2] -}
2023c7c407ca8cf1e5091c57bd84cce8
  $w$ctoJSON ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 6,
     Strictness: <L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: GHC.Types.Int)
                   (ww5 :: GHC.Types.Int) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Lib.$fToJSONRating22,
                            case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Text.Internal.Text #)
                                   (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           10#
                                           s2 of ds1 { (#,#) ipv ipv1 ->
                                    Lib.$wouter ipv1 4# ww 0# ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                            Data.Aeson.Types.Internal.String dt } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Lib.$fToJSONRating18,
                               case ww1 of wild { GHC.Types.I# i ->
                               case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                               Data.Aeson.Types.Internal.Number
                                 (Data.Scientific.Scientific dt 0#) } })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Lib.$fToJSONRating14,
                                  case ww2 of wild { GHC.Types.I# i ->
                                  case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                  Data.Aeson.Types.Internal.Number
                                    (Data.Scientific.Scientific dt 0#) } })
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Lib.$fToJSONRating10,
                                     case ww3 of wild { GHC.Types.I# i ->
                                     case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                     Data.Aeson.Types.Internal.Number
                                       (Data.Scientific.Scientific dt 0#) } })
                                    (GHC.Types.:
                                       @ Data.Aeson.Types.Internal.Pair
                                       (Lib.$fToJSONRating6,
                                        case ww4 of wild { GHC.Types.I# i ->
                                        case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                        Data.Aeson.Types.Internal.Number
                                          (Data.Scientific.Scientific dt 0#) } })
                                       (GHC.Types.:
                                          @ Data.Aeson.Types.Internal.Pair
                                          (Lib.$fToJSONRating2,
                                           case ww5 of wild { GHC.Types.I# i ->
                                           case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                           Data.Aeson.Types.Internal.Number
                                             (Data.Scientific.Scientific dt 0#) } })
                                          (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww6 { Data.Aeson.Types.Internal.Object ww7 ->
                 (# ww7 #) }) -}
0775a20815face7724d6955d75bd1959
  $w$dGFromRecordProd ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Vector.Vector Data.Csv.Types.Field
          -> Data.Csv.Conversion.Parser
               ((GHC.Generics.:*:)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "player")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Base.String)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Maybe.Just "ranking")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Maybe.Just "matches")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)))
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "winStreak")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int)
                   GHC.Generics.:*: (GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Maybe.Just "highestRating")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Maybe.Just "victories")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)))
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 let {
                   ds :: forall p1.
                         (GHC.Types.Int,
                          Data.Vector.Vector Data.Csv.Types.Field
                          -> Data.Csv.Conversion.Parser
                               ((GHC.Generics.:*:)
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "player")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String))
                                  (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "ranking")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "matches")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                  p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd7 @ p1 w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: forall p1.
                          (GHC.Types.Int,
                           Data.Vector.Vector Data.Csv.Types.Field
                           -> Data.Csv.Conversion.Parser
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "winStreak")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "highestRating")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "victories")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int))
                                   p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd1
                            @ p1
                            (case ds @ GHC.Types.Any of wild { (,) n3 fa ->
                             n3 }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds1 @ GHC.Types.Any of wild { (,) n3 fb -> n3 },
                    \ (r1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             ((GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "player")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ranking")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "matches")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                p)
                      = case ds @ p of wild { (,) n3 fa -> fa r1 }
                    } in
                    let {
                      e :: Data.Csv.Conversion.Parser
                             ((GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "winStreak")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "victories")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                p)
                      = case ds1 @ p of wild { (,) n3 fb -> fb r1 }
                    } in
                    (\ @ f2 :: * -> *
                       @ r2
                       (kf :: Data.Csv.Conversion.Failure f2 r2)
                       (ks :: Data.Csv.Conversion.Success
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "player")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Maybe.Just "ranking")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Maybe.Just
                                                                               "matches")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Int)))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "winStreak")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Maybe.Just "highestRating")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Maybe.Just
                                                                               "victories")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Types.Int)))
                                   p)
                                f2
                                r2) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <(GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "player")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "ranking")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "matches")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int))
                             p>_R)
                       @ f2
                       @ r2
                       kf
                       (\ (a1 :: (GHC.Generics.:*:)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "player")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "ranking")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "matches")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int))
                                   p) ->
                        e `cast`
                        (Data.Csv.Conversion.N:Parser[0]
                             <(GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "winStreak")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "victories")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                p>_R)
                          @ f2
                          @ r2
                          kf
                          (\ (a2 :: (GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "winStreak")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "highestRating")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "victories")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                      p) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "player")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "ranking")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Maybe.Just
                                                                              "matches")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Types.Int)))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "winStreak")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "highestRating")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Maybe.Just
                                                                              "victories")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Types.Int)))
                                @ p
                                a1
                                a2))))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <(GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "player")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "ranking")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "matches")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "winStreak")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "highestRating")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "victories")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)))
                                 p>_R)) #)) -}
46f1ba8f1408fa75d5f158c295356c0d
  $w$dGFromRecordProd1 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Vector.Vector Data.Csv.Types.Field
          -> Data.Csv.Conversion.Parser
               ((GHC.Generics.:*:)
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "winStreak")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int))
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "highestRating")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int)
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "victories")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 let {
                   ds :: forall p1.
                         (GHC.Types.Int,
                          Data.Vector.Vector Data.Csv.Types.Field
                          -> Data.Csv.Conversion.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "winStreak")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                  p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd6 @ p1 w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: forall p1.
                          (GHC.Types.Int,
                           Data.Vector.Vector Data.Csv.Types.Field
                           -> Data.Csv.Conversion.Parser
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "highestRating")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "victories")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd2
                            @ p1
                            (case ds @ GHC.Types.Any of wild { (,) n3 fa ->
                             n3 }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds1 @ GHC.Types.Any of wild { (,) n3 fb -> n3 },
                    \ (r1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "winStreak")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p)
                      = case ds @ p of wild { (,) n3 fa -> fa r1 }
                    } in
                    let {
                      e :: Data.Csv.Conversion.Parser
                             ((GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "victories")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                p)
                      = case ds1 @ p of wild { (,) n3 fb -> fb r1 }
                    } in
                    (\ @ f2 :: * -> *
                       @ r2
                       (kf :: Data.Csv.Conversion.Failure f2 r2)
                       (ks :: Data.Csv.Conversion.Success
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "winStreak")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "highestRating")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "victories")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int))
                                   p)
                                f2
                                r2) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "winStreak")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                             p>_R)
                       @ f2
                       @ r2
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "winStreak")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   p) ->
                        e `cast`
                        (Data.Csv.Conversion.N:Parser[0]
                             <(GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "victories")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                p>_R)
                          @ f2
                          @ r2
                          kf
                          (\ (a2 :: (GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "highestRating")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "victories")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      p) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "winStreak")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "highestRating")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "victories")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                @ p
                                a1
                                a2))))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <(GHC.Generics.:*:)
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "winStreak")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "highestRating")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "victories")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                 p>_R)) #)) -}
222914beb5826efcb04f4e83533a1436
  $w$dGFromRecordProd10 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "ranking")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd4 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ranking")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "ranking")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "ranking")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 p>_R)) #) }) -}
2866360492a15f00d726458df51e2f31
  $w$dGFromRecordProd11 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "player")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd12 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "player")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Base.String p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Base.String p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "player")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "player")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 p>_R)) #) }) -}
b43ba7f7435150f5c8ac89132f00a5da
  $w$dGFromRecordProd12 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 (# case w of wild { GHC.Types.I# x ->
                    GHC.Types.I# (GHC.Prim.+# x 1#) },
                    \ (v :: Data.Csv.Types.Record) ->
                    let {
                      m :: Data.Csv.Conversion.Parser Data.Text.Internal.Text
                      = case GHC.Magic.runRW#
                               @ ('GHC.Types.TupleRep
                                    '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                               @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    Data.Either.Either
                                      Data.Text.Encoding.Error.UnicodeException
                                      Data.Text.Internal.Text #)
                               (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                GHC.Prim.catch#
                                  @ (Data.Either.Either
                                       Data.Text.Encoding.Error.UnicodeException
                                       Data.Text.Internal.Text)
                                  @ GHC.Exception.Type.SomeException
                                  (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case GHC.Prim.seq#
                                          @ Data.Text.Internal.Text
                                          @ GHC.Prim.RealWorld
                                          (case v of wild { Data.Vector.Vector dt dt1 dt2 ->
                                           case w of wild1 { GHC.Types.I# y ->
                                           case GHC.Prim.indexArray#
                                                  @ Data.Csv.Types.Field
                                                  dt2
                                                  (GHC.Prim.+# dt y) of ds2 { Unit# ipv ->
                                           case ipv of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                                           Data.Text.Encoding.$wdecodeUtf8With
                                             Data.Text.Encoding.Error.strictDecode
                                             ww1
                                             ww2
                                             ww3
                                             ww4 } } } })
                                          s of ds1 { (#,#) ipv ipv1 ->
                                   (# ipv,
                                      Data.Either.Right
                                        @ Data.Text.Encoding.Error.UnicodeException
                                        @ Data.Text.Internal.Text
                                        ipv1 #) })
                                  Lib.$fFromRecordRating2
                                  eta) of ds1 { (#,#) ipv ipv1 ->
                        case ipv1 of wild {
                          Data.Either.Left x1
                          -> let {
                               msg :: GHC.Base.String
                               = Data.Text.Encoding.Error.$fExceptionUnicodeException_$cshow x1
                             } in
                             (\ @ f2 :: * -> *
                                @ r
                                (kf :: Data.Csv.Conversion.Failure f2 r)
                                (_ks :: Data.Csv.Conversion.Success
                                          Data.Text.Internal.Text f2 r)[OneShot] ->
                              kf msg)
                               `cast`
                             (Sym (Data.Csv.Conversion.N:Parser[0] <Data.Text.Internal.Text>_R))
                          Data.Either.Right y
                          -> (\ @ f2 :: * -> *
                                @ r
                                (_kf :: Data.Csv.Conversion.Failure f2 r)
                                (ks :: Data.Csv.Conversion.Success
                                         Data.Text.Internal.Text f2 r)[OneShot] ->
                              ks y)
                               `cast`
                             (Sym (Data.Csv.Conversion.N:Parser[0]
                                       <Data.Text.Internal.Text>_R)) } }
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] p) f2 r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0] <Data.Text.Internal.Text>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: Data.Text.Internal.Text) ->
                        ks
                          (case a of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                           let {
                             end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                           } in
                           letrec {
                             $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                               {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                             = \ (ww :: GHC.Prim.Int#) ->
                               case GHC.Prim.>=# ww end of lwild {
                                 DEFAULT
                                 -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                    case GHC.Prim.geWord# r# 55296## of lwild1 {
                                      DEFAULT
                                      -> GHC.Types.:
                                           @ GHC.Types.Char
                                           (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                           ($wunfold (GHC.Prim.+# ww 1#))
                                      1#
                                      -> case GHC.Prim.leWord# r# 56319## of lwild2 {
                                           DEFAULT
                                           -> GHC.Types.:
                                                @ GHC.Types.Char
                                                (GHC.Types.C#
                                                   (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                ($wunfold (GHC.Prim.+# ww 1#))
                                           1#
                                           -> case GHC.Prim.indexWord16Array#
                                                     dt
                                                     (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                              GHC.Types.:
                                                @ GHC.Types.Char
                                                (GHC.Types.C#
                                                   (GHC.Prim.chr#
                                                      (GHC.Prim.+#
                                                         9216#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.uncheckedIShiftL#
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#)
                                                                  55296#)
                                                               10#)
                                                            (GHC.Prim.word2Int# r#1)))))
                                                ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                 1# -> GHC.Types.[] @ GHC.Types.Char }
                           } in
                           ($wunfold dt1)
                             `cast`
                           (Sym (GHC.Generics.N:K1[0]
                                     <*>_N <GHC.Generics.R>_P <[GHC.Types.Char]>_R <p>_P)) })))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] p>_R)) #)) -}
8c406ef775949bf24f52e80cf36d4ad3
  $w$dGFromRecordProd2 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Vector.Vector Data.Csv.Types.Field
          -> Data.Csv.Conversion.Parser
               ((GHC.Generics.:*:)
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "highestRating")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int))
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "victories")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int))
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 let {
                   ds :: forall p1.
                         (GHC.Types.Int,
                          Data.Vector.Vector Data.Csv.Types.Field
                          -> Data.Csv.Conversion.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "highestRating")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                  p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd5 @ p1 w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: forall p1.
                          (GHC.Types.Int,
                           Data.Vector.Vector Data.Csv.Types.Field
                           -> Data.Csv.Conversion.Parser
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "victories")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd3
                            @ p1
                            (case ds @ GHC.Types.Any of wild { (,) n3 fa ->
                             n3 }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds1 @ GHC.Types.Any of wild { (,) n3 fb -> n3 },
                    \ (r1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "highestRating")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p)
                      = case ds @ p of wild { (,) n3 fa -> fa r1 }
                    } in
                    let {
                      e :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "victories")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p)
                      = case ds1 @ p of wild { (,) n3 fb -> fb r1 }
                    } in
                    (\ @ f2 :: * -> *
                       @ r2
                       (kf :: Data.Csv.Conversion.Failure f2 r2)
                       (ks :: Data.Csv.Conversion.Success
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "highestRating")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "victories")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   p)
                                f2
                                r2) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "highestRating")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                             p>_R)
                       @ f2
                       @ r2
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   p) ->
                        e `cast`
                        (Data.Csv.Conversion.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "victories")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p>_R)
                          @ f2
                          @ r2
                          kf
                          (\ (a2 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "victories")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      p) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "highestRating")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "victories")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ p
                                a1
                                a2))))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <(GHC.Generics.:*:)
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "highestRating")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "victories")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 p>_R)) #)) -}
76af268f050f9acf53254a48f3813d7d
  $w$dGFromRecordProd3 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "victories")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd4 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "victories")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "victories")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "victories")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 p>_R)) #) }) -}
76efe8c79a37c6df53dcf0810730771a
  $w$dGFromRecordProd4 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2] -}
e00791c86bb36f8adc705413edd27204
  $w$dGFromRecordProd5 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "highestRating")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd4 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "highestRating")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "highestRating")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "highestRating")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 p>_R)) #) }) -}
878414483f776c93ef1cfa7883ee66bc
  $w$dGFromRecordProd6 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "winStreak")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd4 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "winStreak")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "winStreak")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "winStreak")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 p>_R)) #) }) -}
3213b4357f8da8471292bb2740057f08
  $w$dGFromRecordProd7 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Vector.Vector Data.Csv.Types.Field
          -> Data.Csv.Conversion.Parser
               ((GHC.Generics.:*:)
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "player")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Base.String))
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "ranking")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int)
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "matches")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 let {
                   ds :: forall p1.
                         (GHC.Types.Int,
                          Data.Vector.Vector Data.Csv.Types.Field
                          -> Data.Csv.Conversion.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "player")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd11 @ p1 w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: forall p1.
                          (GHC.Types.Int,
                           Data.Vector.Vector Data.Csv.Types.Field
                           -> Data.Csv.Conversion.Parser
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "ranking")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "matches")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd8
                            @ p1
                            (case ds @ GHC.Types.Any of wild { (,) n3 fa ->
                             n3 }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds1 @ GHC.Types.Any of wild { (,) n3 fb -> n3 },
                    \ (r1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "player")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                                p)
                      = case ds @ p of wild { (,) n3 fa -> fa r1 }
                    } in
                    let {
                      e :: Data.Csv.Conversion.Parser
                             ((GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ranking")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matches")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                p)
                      = case ds1 @ p of wild { (,) n3 fb -> fb r1 }
                    } in
                    (\ @ f2 :: * -> *
                       @ r2
                       (kf :: Data.Csv.Conversion.Failure f2 r2)
                       (ks :: Data.Csv.Conversion.Success
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "player")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String))
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "ranking")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Maybe.Just "matches")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int))
                                   p)
                                f2
                                r2) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "player")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             p>_R)
                       @ f2
                       @ r2
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "player")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   p) ->
                        e `cast`
                        (Data.Csv.Conversion.N:Parser[0]
                             <(GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ranking")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matches")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                p>_R)
                          @ f2
                          @ r2
                          kf
                          (\ (a2 :: (GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "ranking")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "matches")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      p) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "player")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "ranking")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "matches")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                @ p
                                a1
                                a2))))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <(GHC.Generics.:*:)
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "player")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "ranking")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "matches")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                 p>_R)) #)) -}
baafc4b9842112ec02399c2663b31f0a
  $w$dGFromRecordProd8 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Vector.Vector Data.Csv.Types.Field
          -> Data.Csv.Conversion.Parser
               ((GHC.Generics.:*:)
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "ranking")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int))
                  (GHC.Generics.M1
                     GHC.Generics.S
                     ('GHC.Generics.MetaSel
                        ('GHC.Maybe.Just "matches")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 GHC.Types.Int))
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 let {
                   ds :: forall p1.
                         (GHC.Types.Int,
                          Data.Vector.Vector Data.Csv.Types.Field
                          -> Data.Csv.Conversion.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "ranking")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                  p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd10 @ p1 w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: forall p1.
                          (GHC.Types.Int,
                           Data.Vector.Vector Data.Csv.Types.Field
                           -> Data.Csv.Conversion.Parser
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matches")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   p1))
                   = \ @ p1 ->
                     case Lib.$w$dGFromRecordProd9
                            @ p1
                            (case ds @ GHC.Types.Any of wild { (,) n3 fa ->
                             n3 }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds1 @ GHC.Types.Any of wild { (,) n3 fb -> n3 },
                    \ (r1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "ranking")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p)
                      = case ds @ p of wild { (,) n3 fa -> fa r1 }
                    } in
                    let {
                      e :: Data.Csv.Conversion.Parser
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "matches")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p)
                      = case ds1 @ p of wild { (,) n3 fb -> fb r1 }
                    } in
                    (\ @ f2 :: * -> *
                       @ r2
                       (kf :: Data.Csv.Conversion.Failure f2 r2)
                       (ks :: Data.Csv.Conversion.Success
                                ((GHC.Generics.:*:)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "ranking")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "matches")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int))
                                   p)
                                f2
                                r2) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "ranking")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                             p>_R)
                       @ f2
                       @ r2
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ranking")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   p) ->
                        e `cast`
                        (Data.Csv.Conversion.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "matches")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                p>_R)
                          @ f2
                          @ r2
                          kf
                          (\ (a2 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "matches")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      p) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "ranking")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "matches")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ p
                                a1
                                a2))))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <(GHC.Generics.:*:)
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "ranking")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 (GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "matches")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 p>_R)) #)) -}
b3c8a084b9fd2f84982ba120a3cef62f
  $w$dGFromRecordProd9 ::
    GHC.Types.Int
    -> (# GHC.Types.Int,
          Data.Csv.Types.Record
          -> Data.Csv.Conversion.Parser
               (GHC.Generics.M1
                  GHC.Generics.S
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "matches")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                  p) #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [2],
     Unfolding: (\ @ p (w :: GHC.Types.Int) ->
                 case Lib.$w$dGFromRecordProd4 @ p w of ww { (#,#) ww1 ww2 ->
                 (# ww1,
                    \ (x1 :: Data.Vector.Vector Data.Csv.Types.Field) ->
                    let {
                      m :: Data.Csv.Conversion.Parser
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p)
                      = ww2 x1
                    } in
                    (\ @ f2 :: * -> *
                       @ r
                       (kf :: Data.Csv.Conversion.Failure f2 r)
                       (ks :: Data.Csv.Conversion.Success
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matches")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                   p)
                                f2
                                r) ->
                     m `cast`
                     (Data.Csv.Conversion.N:Parser[0]
                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p>_R)
                       @ f2
                       @ r
                       kf
                       (\ (a :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int p) ->
                        ks
                          a `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "matches")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <p>_N)))
                      `cast`
                    (Sym (Data.Csv.Conversion.N:Parser[0]
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "matches")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 p>_R)) #) }) -}
c0e7fbc3ded8a3f0249879be7a47e622
  $wdt ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr [Lib.Rating] #)
  {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
277fd6fb67abe262899ab69587418490
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [2] -}
145398789488fcd9d86230b8a7aafeb7
  type API =
    "get_ratings"
    Servant.API.Sub.:> (Servant.API.Capture.Capture
                          "game" GHC.Base.String
                        Servant.API.Sub.:> Servant.API.Verbs.Get
                                             '[Servant.API.ContentTypes.JSON] [Lib.Rating])
df78c57249e01dacffbe2d3998214ff4
  data Rating
    = Rating {player :: GHC.Base.String,
              ranking :: GHC.Types.Int,
              matches :: GHC.Types.Int,
              winStreak :: GHC.Types.Int,
              highestRating :: GHC.Types.Int,
              victories :: GHC.Types.Int}
df78c57249e01dacffbe2d3998214ff4
  axiom Lib.Rep_Rating::
      GHC.Generics.Rep Lib.Rating
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Rating"
               "Lib"
               "haskello-0.1.0.0-1YBHo1lZI5NJIcTIRnkfIJ"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Rating" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Maybe.Just "player")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Base.String)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "ranking")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "matches")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "winStreak")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "highestRating")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Maybe.Just
                                                                             "victories")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Int)))))
b03ff981ba3b52d110da73fe30c088aa
  app :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   Lib.app1) -}
dad25caffbfd1d48a52008a13180447b
  app1 ::
    Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   Lib.app2
                   GHC.Tuple.()) -}
2b9b00087c3b13c46896e6941f9320b4
  app10 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr [Lib.Rating] #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: [2],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lib.$wdt w1) -}
312bf9e1b24625b173c3283dee716a5e
  app11 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, ())
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Lib.Rating]))
    -> Servant.Server.Internal.Router.Router
         (Data.Text.Internal.Text, ())
  {- Unfolding: (Servant.Server.Internal.$w$croute13
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [Lib.Rating]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.$s$fHasServerTYPE:>context1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <200>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <200>_N)
                   @ (Data.Text.Internal.Text, ())
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [Lib.Rating]))) -}
04f4f8e4c10f15be3a972946cb303a59
  app12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s2 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   ipv1
                   4#
                   Lib.$s$fHasServerTYPE:>context4_$croute1
                   0#
                   ipv }) -}
e2e4666ce38423bb46f17d5f5c15b6f6
  app2 :: Servant.Server.Internal.Router.Router ()
  {- Strictness: m1,
     Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.app3
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
6b3fb64fde8a2ee70a267047b3a2b69e
  app3 ::
    Data.Map.Internal.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Lib.app12 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Internal.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.app4
                   (Data.Map.Internal.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Internal.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
1fae74460dfa01f3e9459ea8c048c134
  app4 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Strictness: m2,
     Unfolding: (Servant.Server.Internal.Router.CaptureRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.app5) -}
dbca7bc14e6c461b0f41bf83c994b6ef
  app5 ::
    Servant.Server.Internal.Router.Router (Data.Text.Internal.Text, ())
  {- Unfolding: (Lib.app11 Lib.app6) -}
3008f2be6ee9b73706c9bca0aa95cdc8
  app6 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, ())
      (Servant.Server.Internal.ServerT
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Lib.Rating])
         Servant.Server.Internal.Handler.Handler)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.addCapture
                   @ ()
                   @ [GHC.Types.Char]
                   @ (Servant.Server.Internal.ServerT
                        (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [Lib.Rating])
                        Servant.Server.Internal.Handler.Handler)
                   @ Data.Text.Internal.Text
                   Lib.app8
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m6[0]
                                <"get_ratings">_N
                                <Servant.API.Capture.Capture "game" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [Lib.Rating]>_N
                                <Servant.Server.Internal.Handler.Handler>_N) ; Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m14[0]
                                                                                        <'[]>_N
                                                                                        <"game">_N
                                                                                        <[GHC.Types.Char]>_N
                                                                                        <Servant.API.Verbs.Verb
                                                                                           'Network.HTTP.Types.Method.GET
                                                                                           200
                                                                                           '[Servant.API.ContentTypes.JSON]
                                                                                           [Lib.Rating]>_N
                                                                                        <Servant.Server.Internal.Handler.Handler>_N)))_R
                   Lib.app7) -}
8208d540463ae86ca7c2b410a1537452
  app7 ::
    Data.Text.Internal.Text
    -> Servant.Server.Internal.RoutingApplication.DelayedIO
         [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U,U,U)>,
     Unfolding: (\ (txt :: Data.Text.Internal.Text) ->
                 case Web.Internal.HttpApiData.$w$cparseUrlPiece3
                        txt of ww { Unit# ww1 ->
                 (Servant.Server.Internal.RoutingApplication.$fApplicativeDelayedIO2
                    @ [GHC.Types.Char]
                    ww1)
                   `cast`
                 ((<Network.Wai.Internal.Request>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          [GHC.Types.Char]>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                                          <GHC.Types.IO>_R
                                                                          <[GHC.Types.Char]>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                            <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                               GHC.Types.IO>_R
                                                                                                            <[GHC.Types.Char]>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                                               <*>_N
                                                                                                                                               <Network.Wai.Internal.Request>_R
                                                                                                                                               <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                                                                  (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                                                                     GHC.Types.IO)>_R
                                                                                                                                               <[GHC.Types.Char]>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <[GHC.Types.Char]>_N)) }) -}
c30be98c766e553cff612a9ab80b66ae
  app8 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.ServerT
         Lib.API Servant.Server.Internal.Handler.Handler)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.ServerT
                        Lib.API Servant.Server.Internal.Handler.Handler)
                   @ ()
                   @ ()
                   @ ()
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed4 @ ())
                     `cast`
                   (<()>_R
                    ->_R (<Network.Wai.Internal.Request>_R
                          ->_R (<GHC.IORef.IORef
                                   Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <Servant.Server.Internal.RoutingApplication.RouteResult
                                                 ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                                   <GHC.Types.IO>_R
                                                                   <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                       <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                          GHC.Types.IO>_R
                                                                                       <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                            <*>_N
                                                                                                            <Network.Wai.Internal.Request>_R
                                                                                                            <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                               (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                                  GHC.Types.IO)>_R
                                                                                                            <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed2
                     `cast`
                   ((<Network.Wai.Internal.Request>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Servant.Server.Internal.RoutingApplication.RouteResult
                                            ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                              <GHC.Types.IO>_R
                                                              <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                  <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                     GHC.Types.IO>_R
                                                                                  <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                       <*>_N
                                                                                                       <Network.Wai.Internal.Request>_R
                                                                                                       <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                          (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                             GHC.Types.IO)>_R
                                                                                                       <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (<()>_R
                    ->_R (<Network.Wai.Internal.Request>_R
                          ->_R (<GHC.IORef.IORef
                                   Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <Servant.Server.Internal.RoutingApplication.RouteResult
                                                 ()>_R) ; Sym (Servant.Server.Internal.RoutingApplication.N:RouteResultT[0]
                                                                   <GHC.Types.IO>_R
                                                                   <()>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                       <Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                          GHC.Types.IO>_R
                                                                                       <()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                            <*>_N
                                                                                                            <Network.Wai.Internal.Request>_R
                                                                                                            <Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                               (Servant.Server.Internal.RoutingApplication.RouteResultT
                                                                                                                  GHC.Types.IO)>_R
                                                                                                            <()>_N) ; Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]) <()>_N))
                   Lib.app9) -}
13a40ed5fbfed185e30ee54da20cdba3
  app9 ::
    ()
    -> ()
    -> ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.ServerT
            Lib.API Servant.Server.Internal.Handler.Handler)
  {- Arity: 6, Strictness: <L,A><L,A><L,A><L,A><L,A><L,A>m3,
     Unfolding: (\ (ds :: ())
                   (ds1 :: ())
                   (ds2 :: ())
                   (ds3 :: ())
                   (ds4 :: ())
                   (ds5 :: Network.Wai.Internal.Request) ->
                 Lib.app_result) -}
5cd3a8bea72a5a9ae512c0c12a156ce9
  app_result ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.ServerT
         Lib.API Servant.Server.Internal.Handler.Handler)
  {- Strictness: m3,
     Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.ServerT
                        Lib.API Servant.Server.Internal.Handler.Handler)
                   Lib.app10
                     `cast`
                   ((<[GHC.Types.Char]>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.Either.Either
                                      Servant.Server.Internal.ServantErr.ServantErr
                                      [Lib.Rating]>_R) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                   <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                                   <GHC.Types.IO>_R
                                                                   <[Lib.Rating]>_N) ; (Sym (Servant.Server.Internal.Handler.N:Handler[0]) <[Lib.Rating]>_N ; Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                                                                            <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                                                                            <'Network.HTTP.Types.Method.GET>_N
                                                                                                                                                                            <200>_N
                                                                                                                                                                            <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                                                                            <[Lib.Rating]>_N
                                                                                                                                                                            <Servant.Server.Internal.Handler.Handler>_N))))) ; (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m14[0]
                                                                                                                                                                                                                                              <'[]>_N
                                                                                                                                                                                                                                              <"game">_N
                                                                                                                                                                                                                                              <[GHC.Types.Char]>_N
                                                                                                                                                                                                                                              <Servant.API.Verbs.Verb
                                                                                                                                                                                                                                                 'Network.HTTP.Types.Method.GET
                                                                                                                                                                                                                                                 200
                                                                                                                                                                                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                                                                                                                                                                                 [Lib.Rating]>_N
                                                                                                                                                                                                                                              <Servant.Server.Internal.Handler.Handler>_N)) ; Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m6[0]
                                                                                                                                                                                                                                                                                                            <"get_ratings">_N
                                                                                                                                                                                                                                                                                                            <Servant.API.Capture.Capture
                                                                                                                                                                                                                                                                                                               "game"
                                                                                                                                                                                                                                                                                                               GHC.Base.String
                                                                                                                                                                                                                                                                                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                                                                                                                                                                                                                  '[Servant.API.ContentTypes.JSON]
                                                                                                                                                                                                                                                                                                                                  [Lib.Rating]>_N
                                                                                                                                                                                                                                                                                                            <Servant.Server.Internal.Handler.Handler>_N))))) -}
df78c57249e01dacffbe2d3998214ff4
  highestRating :: Lib.Rating -> GHC.Types.Int
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
df78c57249e01dacffbe2d3998214ff4
  matches :: Lib.Rating -> GHC.Types.Int
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
df78c57249e01dacffbe2d3998214ff4
  player :: Lib.Rating -> GHC.Base.String
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds1 }) -}
df78c57249e01dacffbe2d3998214ff4
  ranking :: Lib.Rating -> GHC.Types.Int
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds2 }) -}
b0dad9329090b815f6a7b4f308e01c50
  startApp :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.startApp1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e5e5aa08095421e461211eb227a47633
  startApp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Network.Wai.Handler.Warp.Run.run2
                   (Network.Wai.Handler.Warp.Settings.Settings
                      (GHC.Types.I# 8080#)
                      Network.Wai.Handler.Warp.Settings.defaultSettings16
                      Network.Wai.Handler.Warp.Settings.defaultOnException1
                        `cast`
                      (<GHC.Maybe.Maybe Network.Wai.Internal.Request>_R
                       ->_R <GHC.Exception.Type.SomeException>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                      Network.Wai.Handler.Warp.Settings.defaultSettings15
                        `cast`
                      (<Network.Socket.Types.SockAddr>_R
                       ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                      Network.Wai.Handler.Warp.Settings.defaultSettings14
                        `cast`
                      (<Network.Socket.Types.SockAddr>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      Network.Wai.Handler.Warp.Settings.defaultSettings13
                      (GHC.Maybe.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                      Network.Wai.Handler.Warp.Settings.defaultSettings12
                      Network.Wai.Handler.Warp.Settings.defaultSettings12
                      Network.Wai.Handler.Warp.Settings.defaultSettings11
                        `cast`
                      (Sym (GHC.Types.N:IO[0] <()>_R))
                      Network.Wai.Handler.Warp.Settings.defaultSettings10
                        `cast`
                      (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                        -> GHC.Types.IO ()>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      GHC.Types.False
                      Network.Wai.Handler.Warp.Settings.defaultSettings9
                        `cast`
                      (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      Network.Wai.Handler.Warp.Settings.defaultSettings6
                      Network.Wai.Handler.Warp.Settings.defaultSettings4
                      Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                      Network.Wai.Handler.Warp.Settings.defaultSettings3
                      GHC.Types.True
                      Network.Wai.Handler.Warp.Settings.defaultSettings2
                        `cast`
                      (<Network.Wai.Internal.Request>_R
                       ->_R <Network.HTTP.Types.Status.Status>_R
                       ->_R <GHC.Maybe.Maybe GHC.Integer.Type.Integer>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      Network.Wai.Handler.Warp.Settings.defaultSettings1
                        `cast`
                      (<Network.Wai.Internal.Request>_R
                       ->_R <Data.ByteString.Internal.ByteString>_R
                       ->_R <GHC.Integer.Type.Integer>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                      (GHC.Maybe.Nothing @ GHC.Types.Int))
                   Lib.app
                   eta1) -}
df78c57249e01dacffbe2d3998214ff4
  victories :: Lib.Rating -> GHC.Types.Int
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
df78c57249e01dacffbe2d3998214ff4
  winStreak :: Lib.Rating -> GHC.Types.Int
  RecSel Left Lib.Rating
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Rating) ->
                 case ds of wild { Lib.Rating ds1 ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
instance GHC.Classes.Eq [Lib.Rating] = Lib.$fEqRating
instance Data.Aeson.Types.FromJSON.FromJSON [Lib.Rating]
  = Lib.$fFromJSONRating
instance Data.Csv.Conversion.FromRecord [Lib.Rating]
  = Lib.$fFromRecordRating
instance GHC.Generics.Generic [Lib.Rating] = Lib.$fGenericRating
instance GHC.Show.Show [Lib.Rating] = Lib.$fShowRating
instance Data.Aeson.Types.ToJSON.ToJSON [Lib.Rating]
  = Lib.$fToJSONRating
family instance GHC.Generics.Rep [Lib.Rating] = Lib.Rep_Rating
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ [Rating]" forall (v2 :: Servant.API.ContentTypes.AllMimeRender
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   [Lib.Rating])
                                                          (v1 :: Servant.API.ContentTypes.AllMime
                                                                   '[])
                                                          (v :: Servant.API.ContentTypes.Accept
                                                                  Servant.API.ContentTypes.JSON)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [Lib.Rating]
                                           v
                                           v1
                                           v2
  = Lib.$s$fAllCTRender:a
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ [Rating]" forall (v :: Servant.API.ContentTypes.MimeRender
                                                               Servant.API.ContentTypes.JSON
                                                               [Lib.Rating])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [Lib.Rating]
                                              v
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/Lib $fAllMimeRender:a0_$callMimeRender @ JSON @ [Rating]" [2] forall (w :: Servant.API.ContentTypes.MimeRender
                                                                                   Servant.API.ContentTypes.JSON
                                                                                   [Lib.Rating])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [Lib.Rating]
                                                              w
  = Lib.$s$fAllMimeRender:a0_$callMimeRender
"SPEC/Lib $fAllMimeRender:a2 @ JSON @ [Rating]" forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                          Servant.API.ContentTypes.JSON
                                                                          [Lib.Rating])
  Servant.API.ContentTypes.$fAllMimeRender:a2 @ Servant.API.ContentTypes.JSON
                                              @ [Lib.Rating]
                                              $dMimeRender
  = Lib.$s$fAllMimeRender:a2
"SPEC/Lib $fMimeRenderTYPEJSONa @ [Rating]" forall (v :: Data.Aeson.Types.ToJSON.ToJSON
                                                           [Lib.Rating])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [Lib.Rating] v
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/Lib encode @ [Rating]" forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                   [Lib.Rating])
  Data.Aeson.encode @ [Lib.Rating] $dToJSON = Lib.$sencode
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

